package com.zensar.spring_core_demo;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.AbstractApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import com.zensar.beans.Product;
import com.zensar.beans.Student;

/**
 * Hello world!
 *
 */
public class App {
	public static void main(String[] args) {

		ApplicationContext context = new ClassPathXmlApplicationContext("context.xml");

		//Product p2 = (Product) context.getBean("p2");
		
		//context.getBean(Product.class, "p2");
		
		// Product p1=(Product)context.getBean("p1");
		
		
		Student student=context.getBean( "student",Student.class);
		//Student student1=context.getBean( "s1",Student.class);
		 
		//System.out.println(p1);
		System.out.println(student);
		//System.out.println(student1);

		/*
		 * Product product=new Product(1,"lapy",40000); System.out.println( product);
		 */
		
		//((AbstractApplicationContext) context).close();
	}
}


-----------------

package com.zensar.beans;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.springframework.beans.factory.DisposableBean;
import org.springframework.beans.factory.InitializingBean;

//import java.util.Map;
//import java.util.Properties;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;


@Component
public class Student{
	
	
	@Value("${id}")
	private int studentId;
	@Value("${name}")
	private String studentName;
	@Value("${age}")
	private int studentAge;
	

	public Student() {
		super();
		System.out.println("iam inside deafult constructir");
		// TODO Auto-generated constructor stub
	}
	
	@PostConstruct
	public void myInit() {
		System.out.println("iam inside myinit method");
	}
	
	@PreDestroy
	public void myDestroy() {
		// TODO Auto-generated method stub
		System.out.println("iam inside destroy method");
	}


	public Student(int studentId, String studentName, int studentAge) {
		super();
		this.studentId = studentId;
		this.studentName = studentName;
		this.studentAge = studentAge;
		
	}

	public int getStudentId() {
		return studentId;
	}

	public void setStudentId(int studentId) {
		this.studentId = studentId;
	}

	public String getStudentName() {
		return studentName;
	}

	public void setStudentName(String studentName) {
		this.studentName = studentName;
	}

	public int getStudentAge() {
		return studentAge;
	}

	public void setStudentAge(int studentAge) {
		this.studentAge = studentAge;
	}

	

	

	@Override
	public String toString() {
		return "Student [studentId=" + studentId + ", studentName=" + studentName + ", studentAge=" + studentAge + "]";
	}

	public void destroy() throws Exception {
		// TODO Auto-generated method stub
		
	}

	public void afterPropertiesSet() throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/*
	 * public void afterPropertiesSet() throws Exception { // TODO Auto-generated
	 * method stub System.out.println("iam inside afterset method"); }
	 */

	
	
	
	
	
	/*
	 * @Autowired
	 * 
	 * @Qualifier("add2") private Address address;
	 * 
	 * 
	 * // private Map<Integer,Address> address; private Map<Address, Integer>
	 * address;
	 * 
	 * private Properties properties;
	 * 
	 * public Student() { super();
	 * 
	 * }
	 * 
	 * public Student(int studentId, String studentName, int studentAge,
	 * Map<Address, Integer> address) { super(); this.studentId = studentId;
	 * this.studentName = studentName; this.studentAge = studentAge; this.address =
	 * address; }
	 * 
	 * public int getStudentId() { return studentId; }
	 * 
	 * public void setStudentId(int studentId) { this.studentId = studentId; }
	 * 
	 * public String getStudentName() { return studentName; }
	 * 
	 * public void setStudentName(String studentName) { this.studentName =
	 * studentName; }
	 * 
	 * public int getStudentAge() { return studentAge; }
	 * 
	 * public void setStudentAge(int studentAge) { this.studentAge = studentAge; }
	 * 
	 * public Map<Address, Integer> getAddress() { return address; }
	 * 
	 * public void setAddress(Map<Address, Integer> address) { this.address =
	 * address; }
	 * 
	 * public Properties getProperties() { return properties; }
	 * 
	 * public void setProperties(Properties properties) { this.properties =
	 * properties; }
	 * 
	 * @Override public String toString() { return "Student [studentId=" + studentId
	 * + ", studentName=" + studentName + ", studentAge=" + studentAge +
	 * ", address=" + address + ", properties=" + properties + "]"; }
	 */

}
----------------------

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


	<!-- <bean id="p1" class="com.zensar.beans.Product"> <property name="productId"> 
		<value>1</value> </property> <property name="productName" value="dell"></property> 
		<property name="productCost" value="50000"></property> </bean> -->
	<!-- <bean id="p2" class="com.zensar.beans.Product"> <constructor-arg index="0"> 
		<value type="int">101</value> </constructor-arg> <constructor-arg> <value>Fridge</value> 
		</constructor-arg> <constructor-arg index="2"> <value type="int">20000</value> 
		</constructor-arg> </bean> -->

	<context:component-scan base-package="com.studytonight.community"></context:component-scan>
	<context:component-scan base-package="com.zensar.beans"></context:component-scan>
	<context:property-placeholder location="data.properties"/>
	
	<!-- <bean id="stud" class="com.zensar.beans.Student">
		<property name="studentId" value="1001"></property>
		<property name="studentName" value="rama"></property>
		<property name="studentAge" value="30"></property>

	</bean> -->


</beans>

---------------------------------
data.properties file

id=100
name=Ravina
age=40


---------------------------------------------------------------

output

iam inside deafult constructir
iam inside myinit method
Student [studentId=100, studentName=Ravina, studentAge=40]


---------------------------------------------------------------------
without using the @component




package com.zensar.beans;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.springframework.beans.factory.DisposableBean;
import org.springframework.beans.factory.InitializingBean;

//import java.util.Map;
//import java.util.Properties;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;


//@Component("stud")
public class Student{
	
	
	//@Value("${id}")
	private int studentId;
	//@Value("${name}")
	private String studentName;
	//@Value("${age}")
	private int studentAge;
	

	public Student() {
		super();
		System.out.println("iam inside deafult constructir");
		// TODO Auto-generated constructor stub
	}
	
	@PostConstruct
	public void myInit() {
		System.out.println("iam inside myinit method");
	}
	
	@PreDestroy
	public void myDestroy() {
		// TODO Auto-generated method stub
		System.out.println("iam inside destroy method");
	}


	public Student(int studentId, String studentName, int studentAge) {
		super();
		this.studentId = studentId;
		this.studentName = studentName;
		this.studentAge = studentAge;
		
	}

	public int getStudentId() {
		return studentId;
	}

	public void setStudentId(int studentId) {
		this.studentId = studentId;
	}

	public String getStudentName() {
		return studentName;
	}

	public void setStudentName(String studentName) {
		this.studentName = studentName;
	}

	public int getStudentAge() {
		return studentAge;
	}

	public void setStudentAge(int studentAge) {
		this.studentAge = studentAge;
	}

	

	

	@Override
	public String toString() {
		return "Student [studentId=" + studentId + ", studentName=" + studentName + ", studentAge=" + studentAge + "]";
	}

	public void destroy() throws Exception {
		// TODO Auto-generated method stub
		
	}

	public void afterPropertiesSet() throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/*
	 * public void afterPropertiesSet() throws Exception { // TODO Auto-generated
	 * method stub System.out.println("iam inside afterset method"); }
	 */

	
	
	
	
	
	/*
	 * @Autowired
	 * 
	 * @Qualifier("add2") private Address address;
	 * 
	 * 
	 * // private Map<Integer,Address> address; private Map<Address, Integer>
	 * address;
	 * 
	 * private Properties properties;
	 * 
	 * public Student() { super();
	 * 
	 * }
	 * 
	 * public Student(int studentId, String studentName, int studentAge,
	 * Map<Address, Integer> address) { super(); this.studentId = studentId;
	 * this.studentName = studentName; this.studentAge = studentAge; this.address =
	 * address; }
	 * 
	 * public int getStudentId() { return studentId; }
	 * 
	 * public void setStudentId(int studentId) { this.studentId = studentId; }
	 * 
	 * public String getStudentName() { return studentName; }
	 * 
	 * public void setStudentName(String studentName) { this.studentName =
	 * studentName; }
	 * 
	 * public int getStudentAge() { return studentAge; }
	 * 
	 * public void setStudentAge(int studentAge) { this.studentAge = studentAge; }
	 * 
	 * public Map<Address, Integer> getAddress() { return address; }
	 * 
	 * public void setAddress(Map<Address, Integer> address) { this.address =
	 * address; }
	 * 
	 * public Properties getProperties() { return properties; }
	 * 
	 * public void setProperties(Properties properties) { this.properties =
	 * properties; }
	 * 
	 * @Override public String toString() { return "Student [studentId=" + studentId
	 * + ", studentName=" + studentName + ", studentAge=" + studentAge +
	 * ", address=" + address + ", properties=" + properties + "]"; }
	 */

}


-------------------

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


	<!-- <bean id="p1" class="com.zensar.beans.Product"> <property name="productId"> 
		<value>1</value> </property> <property name="productName" value="dell"></property> 
		<property name="productCost" value="50000"></property> </bean> -->
	<!-- <bean id="p2" class="com.zensar.beans.Product"> <constructor-arg index="0"> 
		<value type="int">101</value> </constructor-arg> <constructor-arg> <value>Fridge</value> 
		</constructor-arg> <constructor-arg index="2"> <value type="int">20000</value> 
		</constructor-arg> </bean> -->

	<context:component-scan base-package="com.studytonight.community"></context:component-scan>
	<!-- <context:component-scan base-package="com.zensar.beans"></context:component-scan> -->
	<context:property-placeholder location="data.properties"/>
	
	 <bean id="stud" class="com.zensar.beans.Student">
		<property name="studentId" value="${id}"></property>
		<property name="studentName" value="${name}"></property>
		<property name="studentAge" value="${age}"></property>

	</bean> 


</beans>


--------------------------------------

id=100
name=Ravina
age=40



output:

iam inside deafult constructir
iam inside myinit method
Student [studentId=100, studentName=Ravina, studentAge=40]


------------------------------------------------------------
without context.xml file






create class




package com.zensar.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import com.zensar.beans.Student;

@Configuration
public class JavaConfiguration {
	
	
	@Bean
	public Student student() {
		return new Student(1001, "Rani", 13);

	}
}

---------------------------------------------------

import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;



import com.zensar.springdemoentity.Student;
import com.zensarconfig.Javaconfiguration;





public class App {
public static void main(String[] args) {
ApplicationContext context= new AnnotationConfigApplicationContext(Javaconfiguration.class);
Student student=context.getBean( "student",Student.class);



System.out.println(student);



}
}



output:

Student [studentId=1001, studentName=rani, studentAge=13]



---------------------------------------------------------------




package com.zensar.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;

import com.zensar.beans.Student;




@Configuration
@ComponentScan("com.zensar.beans") //context:scan
public class JavaConfiguration 
{
	
	
	/*
	 * @Bean public Student student() { return new Student(1001, "Rani", 13);
	 * 
	 * }
	 */
}


------------------------

package com.zensar.beans;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.springframework.beans.factory.DisposableBean;
import org.springframework.beans.factory.InitializingBean;

//import java.util.Map;
//import java.util.Properties;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Controller;
import org.springframework.stereotype.Repository;
import org.springframework.stereotype.Service;

@Component("student")
//@Service("stud")
//@Controller("stud")
//@Repository("stud")
public class Student{
	
	
	//@Value("${id}")
	private int studentId;
	//@Value("${name}")
	private String studentName;
	//@Value("${age}")
	private int studentAge;
	

	public Student() {
		super();
		System.out.println("iam inside deafult constructir");
		// TODO Auto-generated constructor stub
	}
	
	@PostConstruct
	public void myInit() {
		System.out.println("iam inside myinit method");
	}
	
	@PreDestroy
	public void myDestroy() {
		// TODO Auto-generated method stub
		System.out.println("iam inside destroy method");
	}


	public Student(int studentId, String studentName, int studentAge) {
		super();
		this.studentId = studentId;
		this.studentName = studentName;
		this.studentAge = studentAge;
		
	}

	public int getStudentId() {
		return studentId;
	}

	public void setStudentId(int studentId) {
		this.studentId = studentId;
	}

	public String getStudentName() {
		return studentName;
	}

	public void setStudentName(String studentName) {
		this.studentName = studentName;
	}

	public int getStudentAge() {
		return studentAge;
	}

	public void setStudentAge(int studentAge) {
		this.studentAge = studentAge;
	}

	

	

	@Override
	public String toString() {
		return "Student [studentId=" + studentId + ", studentName=" + studentName + ", studentAge=" + studentAge + "]";
	}

	public void destroy() throws Exception {
		// TODO Auto-generated method stub
		
	}

	public void afterPropertiesSet() throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/*
	 * public void afterPropertiesSet() throws Exception { // TODO Auto-generated
	 * method stub System.out.println("iam inside afterset method"); }
	 */

	
	
	
	
	
	/*
	 * @Autowired
	 * 
	 * @Qualifier("add2") private Address address;
	 * 
	 * 
	 * // private Map<Integer,Address> address; private Map<Address, Integer>
	 * address;
	 * 
	 * private Properties properties;
	 * 
	 * public Student() { super();
	 * 
	 * }
	 * 
	 * public Student(int studentId, String studentName, int studentAge,
	 * Map<Address, Integer> address) { super(); this.studentId = studentId;
	 * this.studentName = studentName; this.studentAge = studentAge; this.address =
	 * address; }
	 * 
	 * public int getStudentId() { return studentId; }
	 * 
	 * public void setStudentId(int studentId) { this.studentId = studentId; }
	 * 
	 * public String getStudentName() { return studentName; }
	 * 
	 * public void setStudentName(String studentName) { this.studentName =
	 * studentName; }
	 * 
	 * public int getStudentAge() { return studentAge; }
	 * 
	 * public void setStudentAge(int studentAge) { this.studentAge = studentAge; }
	 * 
	 * public Map<Address, Integer> getAddress() { return address; }
	 * 
	 * public void setAddress(Map<Address, Integer> address) { this.address =
	 * address; }
	 * 
	 * public Properties getProperties() { return properties; }
	 * 
	 * public void setProperties(Properties properties) { this.properties =
	 * properties; }
	 * 
	 * @Override public String toString() { return "Student [studentId=" + studentId
	 * + ", studentName=" + studentName + ", studentAge=" + studentAge +
	 * ", address=" + address + ", properties=" + properties + "]"; }
	 */

}



---------------------------------


package com.zensar.spring_core_demo;

import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import org.springframework.context.support.AbstractApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import com.zensar.beans.Product;
import com.zensar.beans.Student;
import com.zensar.config.JavaConfiguration;

/**
 * Hello world!
 *
 */
public class App {
	public static void main(String[] args) {

		/*
		 * //ApplicationContext context = new
		 * ClassPathXmlApplicationContext("context.xml");
		 * 
		 * //Product p2 = (Product) context.getBean("p2");
		 * 
		 * //context.getBean(Product.class, "p2");
		 * 
		 * // Product p1=(Product)context.getBean("p1");
		 */
		
		ApplicationContext context= new AnnotationConfigApplicationContext(JavaConfiguration.class);		
		Student student=context.getBean( "student",Student.class);
		//Student student1=context.getBean( "s1",Student.class);
		 
		//System.out.println(p1);
		System.out.println(student);
		//System.out.println(student1);

		/*
		 * Product product=new Product(1,"lapy",40000); System.out.println( product);
		 */
		
		//((AbstractApplicationContext) context).close();
	}
}







output:

iam inside deafult constructir
iam inside myinit method
Student [studentId=0, studentName=null, studentAge=0]

-------------------------------------------------------

reading the values from data.property file



package com.zensar.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.PropertySource;

import com.zensar.beans.Student;




@Configuration
@ComponentScan("com.zensar.beans") //context:scan
@PropertySource(value="data.properties") //context:property-placeholder


public class JavaConfiguration 
{
	
	
	/*
	 * @Bean public Student student() { return new Student(1001, "Rani", 13);
	 * 
	 * }
	 */
}



----------

data.properties
file

id=100
name=Ravina
age=40


-----------------------------------------------------

here we have removed comments for  sysmbol(----)


package com.zensar.beans;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.springframework.beans.factory.DisposableBean;
import org.springframework.beans.factory.InitializingBean;

//import java.util.Map;
//import java.util.Properties;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Controller;
import org.springframework.stereotype.Repository;
import org.springframework.stereotype.Service;

@Component("student") -------
//@Service("stud")
//@Controller("stud")
//@Repository("stud")
public class Student {

	@Value("${id}")  -----
	private int studentId;
	@Value("${name}")   ------
	private String studentName;
	@Value("${age}")   -------
	private int studentAge;

	public Student() {
		super();
		System.out.println("iam inside deafult constructir");
		// TODO Auto-generated constructor stub
	}

	@PostConstruct
	public void myInit() {
		System.out.println("iam inside myinit method");
	}

	@PreDestroy
	public void myDestroy() {
		// TODO Auto-generated method stub
		System.out.println("iam inside destroy method");
	}

	public Student(int studentId, String studentName, int studentAge) {
		super();
		this.studentId = studentId;
		this.studentName = studentName;
		this.studentAge = studentAge;

	}

	public int getStudentId() {
		return studentId;
	}

	public void setStudentId(int studentId) {
		this.studentId = studentId;
	}

	public String getStudentName() {
		return studentName;
	}

	public void setStudentName(String studentName) {
		this.studentName = studentName;
	}

	public int getStudentAge() {
		return studentAge;
	}

	public void setStudentAge(int studentAge) {
		this.studentAge = studentAge;
	}

	@Override
	public String toString() {
		return "Student [studentId=" + studentId + ", studentName=" + studentName + ", studentAge=" + studentAge + "]";
	}

	public void destroy() throws Exception {
		// TODO Auto-generated method stub

	}

	public void afterPropertiesSet() throws Exception {
		// TODO Auto-generated method stub

	}

	/*
	 * public void afterPropertiesSet() throws Exception { // TODO Auto-generated
	 * method stub System.out.println("iam inside afterset method"); }
	 */

	/*
	 * @Autowired
	 * 
	 * @Qualifier("add2") private Address address;
	 * 
	 * 
	 * // private Map<Integer,Address> address; private Map<Address, Integer>
	 * address;
	 * 
	 * private Properties properties;
	 * 
	 * public Student() { super();
	 * 
	 * }
	 * 
	 * public Student(int studentId, String studentName, int studentAge,
	 * Map<Address, Integer> address) { super(); this.studentId = studentId;
	 * this.studentName = studentName; this.studentAge = studentAge; this.address =
	 * address; }
	 * 
	 * public int getStudentId() { return studentId; }
	 * 
	 * public void setStudentId(int studentId) { this.studentId = studentId; }
	 * 
	 * public String getStudentName() { return studentName; }
	 * 
	 * public void setStudentName(String studentName) { this.studentName =
	 * studentName; }
	 * 
	 * public int getStudentAge() { return studentAge; }
	 * 
	 * public void setStudentAge(int studentAge) { this.studentAge = studentAge; }
	 * 
	 * public Map<Address, Integer> getAddress() { return address; }
	 * 
	 * public void setAddress(Map<Address, Integer> address) { this.address =
	 * address; }
	 * 
	 * public Properties getProperties() { return properties; }
	 * 
	 * public void setProperties(Properties properties) { this.properties =
	 * properties; }
	 * 
	 * @Override public String toString() { return "Student [studentId=" + studentId
	 * + ", studentName=" + studentName + ", studentAge=" + studentAge +
	 * ", address=" + address + ", properties=" + properties + "]"; }
	 */

}


output:

iam inside deafult constructir
iam inside myinit method
Student [studentId=100, studentName=Ravina, studentAge=40]

---------------------------------------------------------------------


package com.zensar.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.PropertySource;

import com.zensar.beans.Student;




@Configuration
@ComponentScan("com.zensar.") //context:scan
@PropertySource(value="data.properties") //context:property-placeholder


public class JavaConfiguration 
{
	
	
	/*
	 * @Bean public Student student() { return new Student(1001, "Rani", 13);
	 * 
	 * }
	 */
}



----------------------------------

package com.zensar.spring_core_demo;

import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import org.springframework.context.support.AbstractApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import com.zensar.beans.Product;
import com.zensar.beans.Student;
import com.zensar.config.JavaConfiguration;

/**
 * Hello world!
 *
 */
public class App {
	public static void main(String[] args) {

		/*
		 * //ApplicationContext context = new
		 * ClassPathXmlApplicationContext("context.xml");
		 * 
		 * //Product p2 = (Product) context.getBean("p2");
		 * 
		 * //context.getBean(Product.class, "p2");
		 * 
		 * // Product p1=(Product)context.getBean("p1");
		 */
		
		ApplicationContext context= new AnnotationConfigApplicationContext(JavaConfiguration.class);		
		Student student=context.getBean( "student",Student.class);
		//Student student1=context.getBean( "s1",Student.class);
		 
		//System.out.println(p1);
		System.out.println(student);
		//System.out.println(student1);

		/*
		 * Product product=new Product(1,"lapy",40000); System.out.println( product);
		 */
		
		//((AbstractApplicationContext) context).close();
	}


}



output:

iam inside deafult constructir
iam inside myinit method
Student [studentId=100, studentName=Ravina, studentAge=40]


-------------------------



package com.zensar.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.PropertySource;

import com.zensar.beans.Student;




@Configuration
@ComponentScan("com") //context:scan
@PropertySource(value="data.properties") //context:property-placeholder


public class JavaConfiguration 
{
	
	
	/*
	 * @Bean public Student student() { return new Student(1001, "Rani", 13);
	 * 
	 * }
	 */
}



output:

iam inside deafult constructir
iam inside myinit method
Student [studentId=100, studentName=Ravina, studentAge=40]

------------------------------------------------
product.java



package com.zensar.beans;

import org.springframework.stereotype.Component;

@Component ///used the component 
public class Product {

	private int productId;
	private String productName;
	private int productCost;

	public Product()
	{
		super();
		System.out.println("Inside product Bean ! ! !");
	}
	
	

	public Product(String productId, String productName, String productCost) {
		System.out.println("inside product string");
		
	}



	public Product(int productId, String productName, int productCost) {
		super();
		System.out.println("inside the constructor");
		this.productId = productId;
		this.productName = productName;
		this.productCost = productCost;
	}

	public int getProductId() {
		return productId;
	}

	public void setProductId(int productId)
	{
		System.out.println("inside the productId");
		this.productId = productId;
	}

	public String getProductName() {
		return productName;
	}

	public void setProductName(String productName) {
		System.out.println("inside the productName");
		this.productName = productName;
	}

	public int getProductCost() {
		return productCost;
	}

	public void setProductCost(int productCost) 
	{
		System.out.println("inside the productCost");
		this.productCost = productCost;
	}

	@Override
	public String toString() {
		return "Product [productId=" + productId + ", productName=" + productName + ", productCost=" + productCost
				+ "]";
	}

}

the output is 


Inside product Bean ! ! !
iam inside deafult constructir
iam inside myinit method
Student [studentId=100, studentName=Ravina, studentAge=40]


---------------------------------------------------------------

we used @scope 



package com.zensar.beans;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.springframework.beans.factory.DisposableBean;
import org.springframework.beans.factory.InitializingBean;

//import java.util.Map;
//import java.util.Properties;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Controller;
import org.springframework.stereotype.Repository;
import org.springframework.stereotype.Service;

@Component("student")
//@Service("stud")
//@Controller("stud")
//@Repository("stud")
@Scope("singleton")
public class Student {

	@Value("${id}")
	private int studentId;
	@Value("${name}")
	private String studentName;
	@Value("${age}")
	private int studentAge;

	public Student() {
		super();
		System.out.println("iam inside deafult constructir");
		// TODO Auto-generated constructor stub
	}

	@PostConstruct
	public void myInit() {
		System.out.println("iam inside myinit method");
	}

	@PreDestroy
	public void myDestroy() {
		// TODO Auto-generated method stub
		System.out.println("iam inside destroy method");
	}

	public Student(int studentId, String studentName, int studentAge) {
		super();
		this.studentId = studentId;
		this.studentName = studentName;
		this.studentAge = studentAge;

	}

	public int getStudentId() {
		return studentId;
	}

	public void setStudentId(int studentId) {
		this.studentId = studentId;
	}

	public String getStudentName() {
		return studentName;
	}

	public void setStudentName(String studentName) {
		this.studentName = studentName;
	}

	public int getStudentAge() {
		return studentAge;
	}

	public void setStudentAge(int studentAge) {
		this.studentAge = studentAge;
	}

	@Override
	public String toString() {
		return "Student [studentId=" + studentId + ", studentName=" + studentName + ", studentAge=" + studentAge + "]";
	}

	public void destroy() throws Exception {
		// TODO Auto-generated method stub

	}

	public void afterPropertiesSet() throws Exception {
		// TODO Auto-generated method stub

	}

	/*
	 * public void afterPropertiesSet() throws Exception { // TODO Auto-generated
	 * method stub System.out.println("iam inside afterset method"); }
	 */

	/*
	 * @Autowired
	 * 
	 * @Qualifier("add2") private Address address;
	 * 
	 * 
	 * // private Map<Integer,Address> address; private Map<Address, Integer>
	 * address;
	 * 
	 * private Properties properties;
	 * 
	 * public Student() { super();
	 * 
	 * }
	 * 
	 * public Student(int studentId, String studentName, int studentAge,
	 * Map<Address, Integer> address) { super(); this.studentId = studentId;
	 * this.studentName = studentName; this.studentAge = studentAge; this.address =
	 * address; }
	 * 
	 * public int getStudentId() { return studentId; }
	 * 
	 * public void setStudentId(int studentId) { this.studentId = studentId; }
	 * 
	 * public String getStudentName() { return studentName; }
	 * 
	 * public void setStudentName(String studentName) { this.studentName =
	 * studentName; }
	 * 
	 * public int getStudentAge() { return studentAge; }
	 * 
	 * public void setStudentAge(int studentAge) { this.studentAge = studentAge; }
	 * 
	 * public Map<Address, Integer> getAddress() { return address; }
	 * 
	 * public void setAddress(Map<Address, Integer> address) { this.address =
	 * address; }
	 * 
	 * public Properties getProperties() { return properties; }
	 * 
	 * public void setProperties(Properties properties) { this.properties =
	 * properties; }
	 * 
	 * @Override public String toString() { return "Student [studentId=" + studentId
	 * + ", studentName=" + studentName + ", studentAge=" + studentAge +
	 * ", address=" + address + ", properties=" + properties + "]"; }
	 */

}



---------------------------------------------

package com.zensar.spring_core_demo;

import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import org.springframework.context.support.AbstractApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import com.zensar.beans.Product;
import com.zensar.beans.Student;
import com.zensar.config.JavaConfiguration;

/**
 * Hello world!
 *
 */
public class App {
	public static void main(String[] args) {

		/*
		 * //ApplicationContext context = new
		 * ClassPathXmlApplicationContext("context.xml");
		 * 
		 * //Product p2 = (Product) context.getBean("p2");
		 * 
		 * //context.getBean(Product.class, "p2");
		 * 
		 * // Product p1=(Product)context.getBean("p1");
		 */
		
		ApplicationContext context= new AnnotationConfigApplicationContext(JavaConfiguration.class);		
		Student student=context.getBean( "student",Student.class);
		Student student1=context.getBean( "student",Student.class);
		 
		System.out.println(student.hashCode());
		System.out.println(student.hashCode());
		System.out.println(student1);

		/*
		 * Product product=new Product(1,"lapy",40000); System.out.println( product);
		 */
		
		//((AbstractApplicationContext) context).close();
	}
}




same hash codes for singleton

output:

iam inside deafult constructir
iam inside myinit method
475603167
475603167
Student [studentId=100, studentName=Ravina, studentAge=40]


---------------------------------------------
for scope prototype



package com.zensar.beans;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.springframework.beans.factory.DisposableBean;
import org.springframework.beans.factory.InitializingBean;

//import java.util.Map;
//import java.util.Properties;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Controller;
import org.springframework.stereotype.Repository;
import org.springframework.stereotype.Service;

@Component("student")
//@Service("stud")
//@Controller("stud")
//@Repository("stud")
@Scope("prototype")
public class Student {

	@Value("${id}")
	private int studentId;
	@Value("${name}")
	private String studentName;
	@Value("${age}")
	private int studentAge;

	public Student() {
		super();
		System.out.println("iam inside deafult constructir");
		// TODO Auto-generated constructor stub
	}

	@PostConstruct
	public void myInit() {
		System.out.println("iam inside myinit method");
	}

	@PreDestroy
	public void myDestroy() {
		// TODO Auto-generated method stub
		System.out.println("iam inside destroy method");
	}

	public Student(int studentId, String studentName, int studentAge) {
		super();
		this.studentId = studentId;
		this.studentName = studentName;
		this.studentAge = studentAge;

	}

	public int getStudentId() {
		return studentId;
	}

	public void setStudentId(int studentId) {
		this.studentId = studentId;
	}

	public String getStudentName() {
		return studentName;
	}

	public void setStudentName(String studentName) {
		this.studentName = studentName;
	}

	public int getStudentAge() {
		return studentAge;
	}

	public void setStudentAge(int studentAge) {
		this.studentAge = studentAge;
	}

	@Override
	public String toString() {
		return "Student [studentId=" + studentId + ", studentName=" + studentName + ", studentAge=" + studentAge + "]";
	}

	public void destroy() throws Exception {
		// TODO Auto-generated method stub

	}

	public void afterPropertiesSet() throws Exception {
		// TODO Auto-generated method stub

	}

	/*
	 * public void afterPropertiesSet() throws Exception { // TODO Auto-generated
	 * method stub System.out.println("iam inside afterset method"); }
	 */

	/*
	 * @Autowired
	 * 
	 * @Qualifier("add2") private Address address;
	 * 
	 * 
	 * // private Map<Integer,Address> address; private Map<Address, Integer>
	 * address;
	 * 
	 * private Properties properties;
	 * 
	 * public Student() { super();
	 * 
	 * }
	 * 
	 * public Student(int studentId, String studentName, int studentAge,
	 * Map<Address, Integer> address) { super(); this.studentId = studentId;
	 * this.studentName = studentName; this.studentAge = studentAge; this.address =
	 * address; }
	 * 
	 * public int getStudentId() { return studentId; }
	 * 
	 * public void setStudentId(int studentId) { this.studentId = studentId; }
	 * 
	 * public String getStudentName() { return studentName; }
	 * 
	 * public void setStudentName(String studentName) { this.studentName =
	 * studentName; }
	 * 
	 * public int getStudentAge() { return studentAge; }
	 * 
	 * public void setStudentAge(int studentAge) { this.studentAge = studentAge; }
	 * 
	 * public Map<Address, Integer> getAddress() { return address; }
	 * 
	 * public void setAddress(Map<Address, Integer> address) { this.address =
	 * address; }
	 * 
	 * public Properties getProperties() { return properties; }
	 * 
	 * public void setProperties(Properties properties) { this.properties =
	 * properties; }
	 * 
	 * @Override public String toString() { return "Student [studentId=" + studentId
	 * + ", studentName=" + studentName + ", studentAge=" + studentAge +
	 * ", address=" + address + ", properties=" + properties + "]"; }
	 */

}


----------------------

package com.zensar.spring_core_demo;

import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import org.springframework.context.support.AbstractApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import com.zensar.beans.Product;
import com.zensar.beans.Student;
import com.zensar.config.JavaConfiguration;

/**
 * Hello world!
 *
 */
public class App {
	public static void main(String[] args) {

		/*
		 * //ApplicationContext context = new
		 * ClassPathXmlApplicationContext("context.xml");
		 * 
		 * //Product p2 = (Product) context.getBean("p2");
		 * 
		 * //context.getBean(Product.class, "p2");
		 * 
		 * // Product p1=(Product)context.getBean("p1");
		 */
		
		ApplicationContext context= new AnnotationConfigApplicationContext(JavaConfiguration.class);		
		Student student=context.getBean( "student",Student.class);
		Student student1=context.getBean( "student",Student.class);
		 
		System.out.println(student.hashCode());
		System.out.println(student1.hashCode());
		System.out.println(student1);

		/*
		 * Product product=new Product(1,"lapy",40000); System.out.println( product);
		 */
		
		//((AbstractApplicationContext) context).close();
	}
}




iam inside deafult constructir
iam inside myinit method
iam inside deafult constructir
iam inside myinit method
426394307
1281414889
Student [studentId=100, studentName=Ravina, studentAge=40]


------------------------------------------------------------

