create new project spring-boot-demo-h2
and open pom.xml and add h2 database dependency
now run the application and we will get:'/h2-console'. Database available at 'jdbc:h2:mem:910d0b02-b2bf-412c-a8b5-dd97a74ee911'
==========================================
Ram

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.7.0)

2022-07-07 12:12:31.256  INFO 14300 --- [  restartedMain] c.z.s.SpringBootDemoApplication          : Starting SpringBootDemoApplication using Java 11.0.15 on POOLW42SLPC7060 with PID 14300 (C:\Users\vm67964\Documents\workspace-sts-3.9.8.RELEASE\Training\spring-boot-demo-war\target\classes started by VM67964 in C:\Users\vm67964\Documents\workspace-sts-3.9.8.RELEASE\Training\spring-boot-demo-war)
2022-07-07 12:12:31.256  INFO 14300 --- [  restartedMain] c.z.s.SpringBootDemoApplication          : No active profile set, falling back to 1 default profile: "default"
2022-07-07 12:12:31.783  INFO 14300 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-07-07 12:12:31.825  INFO 14300 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 41 ms. Found 1 JPA repository interfaces.
2022-07-07 12:12:32.010  INFO 14300 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-07-07 12:12:32.012  INFO 14300 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-07-07 12:12:32.012  INFO 14300 --- [  restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.63]
2022-07-07 12:12:32.088  INFO 14300 --- [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-07-07 12:12:32.088  INFO 14300 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 826 ms
2022-07-07 12:12:32.122  INFO 14300 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Starting...
2022-07-07 12:12:32.127  INFO 14300 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Start completed.
2022-07-07 12:12:32.127  INFO 14300 --- [  restartedMain] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:910d0b02-b2bf-412c-a8b5-dd97a74ee911'
2022-07-07 12:12:32.225  INFO 14300 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-07-07 12:12:32.246  INFO 14300 --- [  restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-07-07 12:12:32.294  INFO 14300 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-07-07 12:12:32.295  INFO 14300 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-07-07 12:12:32.439  WARN 14300 --- [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-07-07 12:12:32.695  INFO 14300 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-07-07 12:12:32.743  INFO 14300 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-07-07 12:12:32.752  INFO 14300 --- [  restartedMain] c.z.s.SpringBootDemoApplication          : Started SpringBootDemoApplication in 1.552 seconds (JVM running for 43.779)
MyCommandLineRunner2[--spring.output.ansi.enabled=always]
MyCommandLineRunner[--spring.output.ansi.enabled=always]
MyApplicationRunner[--spring.output.ansi.enabled=always]
2022-07-07 12:12:32.757  INFO 14300 --- [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
Laxman
2022-07-07 12:37:33.771  INFO 14300 --- [nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-07 12:37:33.771  INFO 14300 --- [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-07-07 12:37:33.772  INFO 14300 --- [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
=============================================================================================================

got to chrome and type localhost:8080/h2-console
login page will be open and just paste the JDBC URL which wee got after running the application: Database available at 'jdbc:h2:mem:910d0b02-b2bf-412c-a8b5-dd97a74ee911'
we will se the database and tables

----
//creating jar to the spring boot demo h2 application->right click->runas->maven build...->clean install->build success means ->refresh project jar file will be created

//now to create   image of the application we need Dockerfile->right click on project->new->file->Dockerfile->inside that 

FROM openjdk:11

ADD ./target/spring-boot-demo-0.0.1-SNAPSHOT.jar .

CMD ["java","-jar","spring-boot-demo-0.0.1-SNAPSHOT.jar"]

save it and run the application.
----------------------------------------------
now right click on porject->properties->file location->go inside project->type cmd on top->cmd will be open type below


C:\Users\vm67964\Documents\workspace-sts-3.9.8.RELEASE\Training\spring-boot-demo-h2>docker build -t spring-boot-demo-h2 .
[+] Building 95.4s (7/7) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                               0.0s
 => => transferring dockerfile: 169B                                                                                                                               0.0s
 => [internal] load .dockerignore                                                                                                                                  0.0s
 => => transferring context: 2B                                                                                                                                    0.0s
 => [internal] load metadata for docker.io/library/openjdk:11                                                                                                     10.0s
 => [internal] load build context                                                                                                                                  0.6s
 => => transferring context: 47.11MB                                                                                                                               0.5s
 => [1/2] FROM docker.io/library/openjdk:11@sha256:3432e5c27a4c5b56b717b06669414458ea5142cda2fb80e5fe8049e1cbe8b582                                               84.7s
 => => resolve docker.io/library/openjdk:11@sha256:3432e5c27a4c5b56b717b06669414458ea5142cda2fb80e5fe8049e1cbe8b582                                                0.0s
 => => sha256:f0e1438095c58679e2f43e1ced5d845e2d51520ae88d6c9d9becfb6181307918 6.26kB / 6.26kB                                                                     0.0s
 => => sha256:bc0af19c7c4f492fe6ff0c1d1c8c0e5dd90ab801385b220347bb91dbe2b4094f 1.79kB / 1.79kB                                                                     0.0s
 => => sha256:4c78fa1b97999d08408734a61040475ade5bd7e33e91c0d5170dba2c7c7a92fd 5.16MB / 5.16MB                                                                     2.1s
 => => sha256:14f0d2bd524377dc42d072443c0e5e7cafa14f5df609d39bb1f717f43817a2cd 10.88MB / 10.88MB                                                                   5.3s
 => => sha256:76e5964a957d206950c8c0de99f3c491ecec78887ebe4df0ac5ab9ceb536a4d5 54.58MB / 54.58MB                                                                  39.5s
 => => sha256:3432e5c27a4c5b56b717b06669414458ea5142cda2fb80e5fe8049e1cbe8b582 1.04kB / 1.04kB                                                                     0.0s
 => => sha256:fca703eb5d482bd3e512d3962305b75e1f06059c98e9851d0cac1118c5024992 5.42MB / 5.42MB                                                                    13.2s
 => => extracting sha256:4c78fa1b97999d08408734a61040475ade5bd7e33e91c0d5170dba2c7c7a92fd                                                                          0.3s
 => => sha256:083e84f7a91ea24cc67166dc8ffad59422ed649a499af2c8acca6428ae57918e 211B / 211B                                                                         5.7s
 => => extracting sha256:14f0d2bd524377dc42d072443c0e5e7cafa14f5df609d39bb1f717f43817a2cd                                                                          0.4s
 => => sha256:bc56b6e395a0a6204727731be2897657415b2d41785cc5ab7870df889cdf28cb 203.97MB / 203.97MB                                                                78.1s
 => => extracting sha256:76e5964a957d206950c8c0de99f3c491ecec78887ebe4df0ac5ab9ceb536a4d5                                                                          3.5s
 => => extracting sha256:fca703eb5d482bd3e512d3962305b75e1f06059c98e9851d0cac1118c5024992                                                                          0.3s
 => => extracting sha256:083e84f7a91ea24cc67166dc8ffad59422ed649a499af2c8acca6428ae57918e                                                                          0.0s
 => => extracting sha256:bc56b6e395a0a6204727731be2897657415b2d41785cc5ab7870df889cdf28cb                                                                          6.1s
 => [2/2] ADD ./target/spring-boot-demo-0.0.1-SNAPSHOT.jar .                                                                                                       0.2s
 => exporting to image                                                                                                                                             0.3s
 => => exporting layers                                                                                                                                            0.3s
 => => writing image sha256:1d236b8f4820e01a677d63942d0e027397e54545813f248e91815da74fc32492                                                                       0.0s
 => => naming to docker.io/library/spring-boot-demo-h2                                                                                                             0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them


//image is created 

C:\Users\vm67964\Documents\workspace-sts-3.9.8.RELEASE\Training\spring-boot-demo-h2>docker images
REPOSITORY            TAG       IMAGE ID       CREATED          SIZE
spring-boot-demo-h2   latest    1d236b8f4820   28 seconds ago   707MB
mysql                 8.0.29    7e7e458be53c   32 hours ago     444MB
jenkins/jenkins       latest    4d0f2c58247d   8 days ago       462MB
hello-world           latest    feb5d9fea6a5   9 months ago     13.3kB
springcloud/eureka    latest    3094afcbdf12   7 years ago      660MB

//to create container for the image

C:\Users\vm67964\Documents\workspace-sts-3.9.8.RELEASE\Training\spring-boot-demo-h2>docker run -p 8888:8080 -d  spring-boot-demo-h2
ad40222a517790e3f88c203006d2633ed5d48c6383452c15cd8c269e95ec282a

C:\Users\vm67964\Documents\workspace-sts-3.9.8.RELEASE\Training\spring-boot-demo-h2>docker container ls -a
CONTAINER ID   IMAGE                 COMMAND                  CREATED         STATUS                      PORTS                               NAMES
ad40222a5177   spring-boot-demo-h2   "java -jar spring-bo…"   5 seconds ago   Up 5 seconds                0.0.0.0:8888->8080/tcp              festive_lalande
cc41e0a6ff7d   spring-boot-demo-h2   "java -jar spring-bo…"   2 minutes ago   Created                                                         boring_almeida
118bf9c9d1b8   mysql:8.0.29          "docker-entrypoint.s…"   20 hours ago    Up 3 hours                  33060/tcp, 0.0.0.0:3307->3306/tcp   testsql
3cebbc1ee28e   jenkins/jenkins       "/usr/bin/tini -- /u…"   22 hours ago    Exited (143) 19 hours ago                                       suspicious_perlman
048673aa4cc8   jenkins/jenkins       "/usr/bin/tini -- /u…"   23 hours ago    Exited (143) 23 hours ago                                       beautiful_sinoussi
40feeb6111e3   jenkins/jenkins       "/usr/bin/tini -- /u…"   24 hours ago    Exited (143) 23 hours ago                                       cranky_bose
878c0a48658d   jenkins/jenkins       "/usr/bin/tini -- /u…"   24 hours ago    Exited (143) 23 hours ago                                       determined_bhabha
a3e081f72b74   hello-world           "/hello"                 25 hours ago    Exited (0) 25 hours ago                                         unruffled_kirch


===================================================================================================================================

//now to create image for war application

copy the project and paste and change the name->spring-boot-demo-war

now for creating war  to project->open pom.xml add-><packaging>war</packaging>
and open main spring boot application add->extends SpringBootServletInitializer
@Override
	protected SpringApplicationBuilder configure(SpringApplicationBuilder builder) {
		return super.configure(builder);
	}

right click on project ->new->file->Dockerfile->

FROM openjdk:11

ADD ./target/spring-boot-demo-0.0.1-SNAPSHOT.war  /usr/local/tomcat/webapps/

CMD ["catilina.sh","run"]


now save the changes and right click on project->run as->maveen build...->clean install->refresh the project->see the target folder with war

now right click on the project->properties->file location-> inside the project->type cmd on top->cmd will open  and type below


C:\Users\vm67964\Documents\workspace-sts-3.9.8.RELEASE\Training\spring-boot-demo-war>docker build -t spring-boot-demo-war .    --(dot represents docker file)
[+] Building 12.3s (7/7) FINISHED
 => [internal] load build definition from Dockerfile                                                                                      0.0s
 => => transferring dockerfile: 161B                                                                                                      0.0s
 => [internal] load .dockerignore                                                                                                         0.0s
 => => transferring context: 2B                                                                                                           0.0s
 => [internal] load metadata for docker.io/library/openjdk:11                                                                            11.3s
 => [internal] load build context                                                                                                         0.5s
 => => transferring context: 47.11MB                                                                                                      0.5s
 => CACHED [1/2] FROM docker.io/library/openjdk:11@sha256:3432e5c27a4c5b56b717b06669414458ea5142cda2fb80e5fe8049e1cbe8b582                0.0s
 => [2/2] ADD ./target/spring-boot-demo-0.0.1-SNAPSHOT.war /usr/local/tomcat/webapps/                                                     0.2s
 => exporting to image                                                                                                                    0.2s
 => => exporting layers                                                                                                                   0.2s
 => => writing image sha256:3a4562dd51d3702991c91e4f170a87d98550740feffeb4918c8d81b4e2c61d66                                              0.0s
 => => naming to docker.io/library/spring-boot-demo-war                                                                                   0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them

C:\Users\vm67964\Documents\workspace-sts-3.9.8.RELEASE\Training\spring-boot-demo-war>docker images
REPOSITORY             TAG       IMAGE ID       CREATED          SIZE
spring-boot-demo-war   latest    3a4562dd51d3   21 seconds ago   707MB
spring-boot-demo-h2    latest    1d236b8f4820   17 minutes ago   707MB
mysql                  8.0.29    7e7e458be53c   32 hours ago     444MB
jenkins/jenkins        latest    4d0f2c58247d   8 days ago       462MB
hello-world            latest    feb5d9fea6a5   9 months ago     13.3kB
springcloud/eureka     latest    3094afcbdf12   7 years ago      660MB


///to run wee need tomcat pull or run the tomcat from docker hub



C:\Users\vm67964\Documents\workspace-sts-3.9.8.RELEASE\Training\spring-boot-demo-war>docker run -it --rm -p 7777:8080 tomcat:9.0
Unable to find image 'tomcat:9.0' locally
9.0: Pulling from library/tomcat
405f018f9d1d: Pull complete
160c99d3182b: Pull complete
e07a736be37f: Pull complete
eb991d49ce62: Pull complete
0ff310af806b: Pull complete
61186ad84b31: Pull complete
3d141c097589: Pull complete
Digest: sha256:c9820adf3ad9c3ab458dc5e37c7806f68c2ee2ed8e34211ee9d0d9958e343896
Status: Downloaded newer image for tomcat:9.0
Using CATALINA_BASE:   /usr/local/tomcat
Using CATALINA_HOME:   /usr/local/tomcat
Using CATALINA_TMPDIR: /usr/local/tomcat/temp
Using JRE_HOME:        /opt/java/openjdk
Using CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar
Using CATALINA_OPTS:
NOTE: Picked up JDK_JAVA_OPTIONS:  --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
07-Jul-2022 07:05:54.467 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/9.0.64
07-Jul-2022 07:05:54.470 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Jun 2 2022 19:08:46 UTC
07-Jul-2022 07:05:54.471 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 9.0.64.0
07-Jul-2022 07:05:54.471 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Linux
07-Jul-2022 07:05:54.471 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            5.10.76-linuxkit
07-Jul-2022 07:05:54.472 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
07-Jul-2022 07:05:54.472 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             /opt/java/openjdk
07-Jul-2022 07:05:54.472 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.3+7
07-Jul-2022 07:05:54.472 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Eclipse Adoptium
07-Jul-2022 07:05:54.472 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         /usr/local/tomcat
07-Jul-2022 07:05:54.473 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         /usr/local/tomcat
07-Jul-2022 07:05:54.483 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
07-Jul-2022 07:05:54.484 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
07-Jul-2022 07:05:54.484 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
07-Jul-2022 07:05:54.484 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
07-Jul-2022 07:05:54.484 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
07-Jul-2022 07:05:54.484 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=/usr/local/tomcat/conf/logging.properties
07-Jul-2022 07:05:54.485 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
07-Jul-2022 07:05:54.485 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
07-Jul-2022 07:05:54.485 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
07-Jul-2022 07:05:54.486 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dorg.apache.catalina.security.SecurityListener.UMASK=0027
07-Jul-2022 07:05:54.487 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
07-Jul-2022 07:05:54.489 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=/usr/local/tomcat
07-Jul-2022 07:05:54.489 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=/usr/local/tomcat
07-Jul-2022 07:05:54.489 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=/usr/local/tomcat/temp
07-Jul-2022 07:05:54.497 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [1.2.33] using APR version [1.7.0].
07-Jul-2022 07:05:54.497 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
07-Jul-2022 07:05:54.497 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
07-Jul-2022 07:05:54.504 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 3.0.2 15 Mar 2022]
07-Jul-2022 07:05:54.818 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
07-Jul-2022 07:05:54.847 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [544] milliseconds
07-Jul-2022 07:05:54.893 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
07-Jul-2022 07:05:54.893 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/9.0.64]
07-Jul-2022 07:05:54.908 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
07-Jul-2022 07:05:54.925 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [76] milliseconds
^C07-Jul-2022 10:54:18.506 INFO [Thread-2] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
07-Jul-2022 10:54:18.514 INFO [Thread-2] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
07-Jul-2022 10:54:18.517 INFO [Thread-2] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
07-Jul-2022 10:54:18.521 INFO [Thread-2] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]


============================================================
open other cmd and type below it will start container here due to some issue not started

C:\Users\vm67964\Documents\workspace-sts-3.9.8.RELEASE\Training\spring-boot-demo-war>docker container start cf6db03de754
Error response from daemon: OCI runtime create failed: container_linux.go:380: starting container process caused: exec: "catalina.sh": executable file not found in $PATH: unknown
Error: failed to start containers: cf6db03de754

----------------------------------------------------------------------------------------------------------------------------------------

-----now pushing image to docker hub 

//see the images here wee need to push image of spring-boot-demo-war

C:\Users\vm67964\Documents\workspace-sts-3.9.8.RELEASE\Training\spring-boot-demo-h2>docker images
REPOSITORY             TAG       IMAGE ID       CREATED        SIZE
spring-boot-demo-war   latest    3a4562dd51d3   2 hours ago    707MB
spring-boot-demo-h2    latest    1d236b8f4820   2 hours ago    707MB
mysql                  8.0.29    7e7e458be53c   34 hours ago   444MB
jenkins/jenkins        latest    4d0f2c58247d   8 days ago     462MB
tomcat                 9.0       d4361edeeccb   9 days ago     483MB
hello-world            latest    feb5d9fea6a5   9 months ago   13.3kB
springcloud/eureka     latest    3094afcbdf12   7 years ago    660MB



///// first we need login


C:\Users\vm67964\Documents\workspace-sts-3.9.8.RELEASE\Training\spring-boot-demo-h2>docker login
Login with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.
Username: vinodkumarmuvvala
Password:Docker@123
Login Succeeded

Logging in with your password grants your terminal complete access to your account.
For better security, log in with a limited-privilege personal access token. Learn more at https://docs.docker.com/go/access-tokens/



////now we need to change the image name because it not official image 


C:\Users\vm67964\Documents\workspace-sts-3.9.8.RELEASE\Training\spring-boot-demo-war\target>docker tag spring-boot-demo-war vinodkumarmuvvala/spring-boot-demo-war

C:\Users\vm67964\Documents\workspace-sts-3.9.8.RELEASE\Training\spring-boot-demo-war\target>docker images
REPOSITORY                               TAG       IMAGE ID       CREATED        SIZE
spring-boot-demo-war                     latest    3a4562dd51d3   2 hours ago    707MB
vinodkumarmuvvala/spring-boot-demo-war   latest    3a4562dd51d3   2 hours ago    707MB
spring-boot-demo-h2                      latest    1d236b8f4820   3 hours ago    707MB
sharadrajore/spring-boot-demo-war        3.0       ab07304c8dc3   3 hours ago    353MB
mysql                                    8.0.29    7e7e458be53c   35 hours ago   444MB
jenkins/jenkins                          latest    4d0f2c58247d   8 days ago     462MB
tomcat                                   9.0       d4361edeeccb   9 days ago     483MB
hello-world                              latest    feb5d9fea6a5   9 months ago   13.3kB
springcloud/eureka                       latest    3094afcbdf12   7 years ago    660MB


////now we have to pull the image to repostory of my docker hub account


first fail try agin until succeed

C:\Users\vm67964\Documents\workspace-sts-3.9.8.RELEASE\Training\spring-boot-demo-war\target>docker push vinodkumarmuvvala/spring-boot-demo-war
Using default tag: latest
The push refers to repository [docker.io/vinodkumarmuvvala/spring-boot-demo-war]
e2ad6191b1e9: Pushed
7e145627a1fb: Mounted from library/openjdk
6812ae0d9f23: Mounted from library/openjdk
369123a7ed65: Pushing [==================================================>]  11.32MB/11.32MB
5afd661c6106: Mounted from library/openjdk
66183893ba24: Pushed
6840c8ff46bd: Pushed
97d5fec864d8: Mounted from jenkins/jenkins
net/http: TLS handshake timeout

C:\Users\vm67964\Documents\workspace-sts-3.9.8.RELEASE\Training\spring-boot-demo-war\target>docker push vinodkumarmuvvala/spring-boot-demo-war
Using default tag: latest
The push refers to repository [docker.io/vinodkumarmuvvala/spring-boot-demo-war]
e2ad6191b1e9: Layer already exists
7e145627a1fb: Layer already exists
6812ae0d9f23: Layer already exists
369123a7ed65: Pushed
5afd661c6106: Layer already exists
66183893ba24: Layer already exists
6840c8ff46bd: Layer already exists
97d5fec864d8: Layer already exists
latest: digest: sha256:6b993c59e9316e49d2b5726f645082840f80631d0cd9c80d22fe468bbc7dc503 size: 2007



C:\Users\vm67964\Documents\workspace-sts-3.9.8.RELEASE\Training\spring-boot-demo-war\target>docker images
REPOSITORY                               TAG       IMAGE ID       CREATED        SIZE
spring-boot-demo-war                     latest    3a4562dd51d3   4 hours ago    707MB
vinodkumarmuvvala/spring-boot-demo-war   latest    3a4562dd51d3   4 hours ago    707MB
spring-boot-demo-h2                      latest    1d236b8f4820   5 hours ago    707MB
sharadrajore/spring-boot-demo-war        3.0       ab07304c8dc3   5 hours ago    353MB
mysql                                    8.0.29    7e7e458be53c   36 hours ago   444MB
jenkins/jenkins                          latest    4d0f2c58247d   8 days ago     462MB
tomcat                                   9.0       d4361edeeccb   9 days ago     483MB
hello-world                              latest    feb5d9fea6a5   9 months ago   13.3kB
springcloud/eureka                       latest    3094afcbdf12   7 years ago    660MB



now go to docker hub and see in the repository section


Search by repository name
vinodkumarmuvvala / spring-boot-demo-war
Last pushed: 2 hours ago
Not Scanned
0
0
Public
logo
Tip: Not finding your repository? Try switching namespace via the top left dropdown.


